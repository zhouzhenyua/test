
10.29
简介
 什么是jquery 简称jq
 一个javascript 库 大型项目必备（2015年前）

    什么是库？什么是框架？什么是插件？
    优点：

    大量便捷的方法
    简化js操作

    不需要考虑兼容性问题

       css hack 方法
      js兼容

      id tagname classneme(兼容性 ie)
      style
      addEventListener
      冒泡
      ajax
      滚轮事件

    缺点：
    每次引入
    资源累赘
    zepto.js (轻量型的jq) 2014年之前移动端必备  tap（触摸点）
    touch touchstart  touchmove   tuchend
          onmousedown  onmousemove   onmouseup


学习 www.jquery.com

js和jq的关系？
    jq是js的一个类库

阶段学习
    基础  拓展

10.30




11.5
打包工具

grunt JavaScript 构建工具        项目基本不用

gulp 基于流(管道) 的构建化工具    项目有时还会采用     task(任务)  pipe(管道流)

webpack 模块打包工具             基本上都会使用

模块加载的工具

require     加载 require.js  定义
sea.js      前端模块构建工具

require 和sea 现在已经融入到node 中

前端模块化，AMD与CMD的区别？

git => githup(代码管理仓库) 注册  sourcetree git可视化工具

svn     代码管理工具

项目构建规范
    1、对应的文件放到对应的文件夹
        1.1、 样式中必须要有一个重置样式表
    2、每一个项目必须存在一个文件index.html
        注：所有服务器访问文件时，必需首先找到index.html 当作默认打开文件
    3、项目管理 git 或者 svn
    4、优化项目
    5、传到服务器 (ftp工具) FileZilla(推荐使用) 8uftp

项目开发流程：(前端岗位)
1、理解需求 项目经理/产品经理
2、拿到设计稿
    2.1、和UI对接需求 页面效果及功能
3、制作网页(静态)
4、进行数据交互 (后端 php  java)
5、上传服务器
    5.1、首先上传到测试服务器
        5.1.1、测试人员进行测试
        5.1.2、调BUG 重复测试
        5.1.3、测试通过
    5.2、上传到正式服务器 (外网)
        5.2.1、调BUG

明天内容
swiper
上传或者图片
jq效果
git / svn
es6





11.6
git== github  svn 码云  代码管理工具

操作方式：
1、命令式
    git init 项目初始化 会产生一个文件 .git 隐藏文件

2、可视化工具  sourcetree

git  里面存在三个区间

本地区 暂存区  远程区

打开cmd 的方式
1、window + r
2、打开文件目录，直接输入cmd 执行回车
3、按住shift + 鼠标右键 选择 在此次处打开Powershell窗口

cd 进入目录
cd.. 向上一级

git init  项目初始化  会产生一个 .git 文件
git status  查看状态
git add  添加
    git add . 添加所有
    git add 文件名  单个文件
    git add <file> 可反复多次使用，添加多个文件；
git commit   提交     暂存区
git commit -m ""  -m后面输入的是本次提交的说明 可以是任何内容，但最好有语义化

git config --global user.email "邮箱"  相当于命令行的登录
git config --global user.name "用户名"

git remote add origin https://github.com/q8630/233.git  链接远程仓库
git push -u origin master 推送到分支(master)上
git clone 克隆分支

git diff    可以查看修改内容
git branch -a   查看当前所在分支/查看远程分支
git branch 分支名称     创建分支
git branch      查看本地分支
git checkout 分支名称  切换分支


11、7

git pull 拉取     执行所以操作之前 一定要先执行 git pull
git clone https://github.com/q8630/233.git 克隆项目

创建分支
切换分支
删除分支


es6

map 数组的循环

es6 环境
不支持 => babel 编译  es6=>es5
babel: https://babeljs.io/
babel es6转义工具

function test(){
    console.log(1)
}
test:()=>{
   console.log(1)
}


node  npm  包管理工具  国外 缺点：下载慢/下载不下来文件
      npm init 包初始化  package.json
      npm init -y
      npm install <包名> 下载  比如   eg:jquery
      cnpm  淘宝镜像


      yarn 包管理工具  国内


博客 简述 新浪微博 博客园 思否 csdn

cd desktop 进入桌面

.babelrc
type null>.babelrc  通过 cmd 创建 .babelrc文件

mkdir 文件名 创建文件目录
cls  清屏

预习
es6
let const
symbol

扩展运算符
箭头函数

11.8
src 主要放置 index.html
    index.js 主要放置es6 代码
dist 主要放置编译完成的js
    index.js 主要放置编译完成的es5代码
下载依赖文件
    npm  install -g babel-cli 全局安装babeld的 脚手架(已经做好一些前期工作)
    npm install babel -cli --save-dev 安装本地的 babel脚手架
    --save (生产环境)
    -dev (开发环境)
    编译环境 babel-preset-2015
    npm install babel-preset-es2015 --save-dev

    编译方法 :babel src/index.js -o(output) dist/index.js
    快捷编译方法 ：在 package.json 的 script里面
    配置一个字段 "build":"babel src/index.js -o dist/index.js"

    安装cnpm (淘宝镜像)
    npm install -g cnpm --registry=https://registry.npm.taobao.org
    cnpm install


11.9  地图
百度地图 ，高德地图 （获取密钥）
密钥 :DNa9stjiH6hSOR0yxq0ADB8Pwktug1oM
map
    1、地图
    2、map es6 密钥
    3、资源映射  index.html   index.html.map
    4、锚点链接
    <map>
        <area></area>
    </map>
绘制canvas 绘图环境2d 3d (依赖插件)
    webGl 大数据展示
    3D.js
    there.js

    beginPath() 开始绘制
    closePath() 停止绘制



1、dist src 手动创建
2、package  npm init  npm init -y
3、.babelrc 手动创建  配置es6 的编译环境
type null>.babelrc  通过 cmd 创建 .babelrc文件
4、下载依赖项 npm install babel-cli --save-dev
5、            npm insall babel-preset-es2015 --save-dev
6、 启动 babel src/index.js -o(output) dist/index.js

es6
let
const

1、let 、const和var 相似 都是声明变量
 let和const都是块级作用域
 let 声明的变量只在let的块中有效
 let 声明的变量不可以覆盖
 var 会存在变量提升
 let 不存在变量提升

缺点：
    暂时性死区  TDN


11.14
1、先根据设计稿制作相应的网页
    1.1、根据静态网页转换成动态数据
        1、img title time desc
         1=>6   2=>6
         0-5    6-11
        2、数据渲染  模板  字符串拼接 es5 es6

css 预处理器
less  sass
1、less
2、sass

webpack 模块打包工具  4.6版本
npm  install webpack -g 全局安装webpack
npm i webpack -g   i=install
npm i webpack-cli -g 全局安装webpack脚手架

npm i webpack --save-dev 在开发环境里安装webpack
等同与 npm i webpack -D

npm uninstall webpack 卸载webpack

npm i webpack-cli -S 等同与 npm i webpack --save  生产环境

webpack -v  webpack -V  webpack --version  查看webpack版本

拷贝文件时，不需要带 node_module 这一文件
如果删除后可以执行 npm install 对其重新找回项目依赖

四个概念 =>webpack.config.js  module.exports={}
1、入口(entry)     半颗星
2、出口(output)    一星半
3、loader()        四星
4、插件(plugins)   五星

mode  模式  webpack 4.0之后出现
开发者模式(development)  开发过程中使用
生产模式(production)    线上使用
