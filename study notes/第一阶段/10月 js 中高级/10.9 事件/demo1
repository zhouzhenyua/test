
  一.js基础语法
  >js的组成
  1、ECMAscript
  2、DOM
  3、BOM
  >js的导入
  >js的数据结构（）
  >数据类型之间的转换
  >流程控制
  >js运算符
  >...

  二、
  >各种数据类型需要掌握的方面
  1.什么情况 是这种数据类型
  2、强制转换为这种数据类型
  3、这种数据类型转换为别的数据类型 对应的值？

  三、
  >浅谈堆栈内存 - 引用数据类型 详解
  1、数组的创建
  2、数组的操作 - 增删查改
        数组的属性
  3、怎么创建一个空数组  清空数组
  4、遍历（3）
  5、数组的方法
  6、算法
  		数组的排序
  			冒泡排序算法
  			插入排序算法
  			快速排序算法
  		数组的去重（5）-NaN
  		递归（函数自己调用自己）
  7、类数组 - 数组（4）
  8、多维数组-二级联动菜单
  9、数组的迭代（vue reduce/map）
  		for Each
  10、es6-数组的解构赋值
  		...拓展运算符（剩余的/展开的）

  四、js的数据类型-引用数据类型详解-函数
  >浅谈堆栈内存-引用数据类型
  1、函数的创建（2）
  2、函数创建-运行原理
  3、函数的执行（私有栈内存）
  	函数名（） 匿名函数的执行（4）
  4、变量 变量提升 作用域 作用域链
  5、封装 继承 多态 -面向对象
  6、封装
  		函数的参数
  			实参
  			形参
  			可变参，只有函数才有 类数组 和实参一一映射
  			函数的返回值（构成函数内外部沟通的桥梁）
  			没有返回值
  			有返回值return
  			有返回值 return sum
  			有返回值 return；return sum
  			return中断整个函数
  			return false；阻止元素的默认行为
  7、函数作为一个参数  = 回调函数（callback）
  8、函数自己调用自己  = 递归
  9、函数当作返回值 返回 = 闭包（柯里化函数）
  10、函数执行的步骤
  11、函数的节流
  12、函数的防抖
  【箭头函数】
  【this（6）】

  五、js数据类型-引用数据类型-对象 （键值对）
  1、对象的创建（2）
  2、对象的操作-增删查改
  	  对象的访问（2）
  	  xxx.name   和  xxx['name'] 区别
  3、遍历 键值对
  4、json（是对象 数据交互的格式）
      	json对象 键必须用双引号
  5、json解析

  六、
  dom-document
  1、获取（7）
  2、节点的访问
      children
  3、节点类型  文本3 元素1 注释8 属性  document9
  4、操作元素
      1.动态操作元素：创建 添加 头部插入 替换
      2.操作元素的内容 innerHTML innerText
      3.操作元素的属性 get（获取）/set（设置）/remove attribute
  5、操作css
      1.div.style.width 行内样式
      2.currentStyle  getComputedStyle
      由于有兼容性 封装方法 getstyle
      utils包 高级单例模式 暴露出CSS
      css（div，width）
      css(div,width,100px)
      css(div,{width:100px,height:100px})
      3.通过类名
  	    1、xxx.className
  	    2、xxx.classList.add()
  6、dom映射
     dom重绘（静态样式）
     dom回流（位置结构改变）  - 文档碎片
##中高级知识点梳理
一、闭包堆栈内存
>多做题 进行汇总梳理
1.变量提升
2.作用域和作用域链
3.堆栈内存存储问题（引用技术 标记清除）
4.闭包的作用和在项目中的应用
>JQ基于闭包完成的 部分JQ代码
>高级单例模式
>柯里化函数
>循环做事件绑定 方法中需要循环的索引
>模块化编程 ES6中模块的导入导出及NODE中COMMON模块管理规范（AMD和CMD模块管理规范等）
>...
二、面向对象
>理解和归纳汇总
>对象创建的方式（4）
1.对象、类、实例
2.构造函数模式和原型以及原型链
3.instanceof：数据类型检测
4.hasOwnProperty
5.类的继承（原型继承，call继承，寄生组合继承，ES6中的EXTENDS继承。。。）、封装、多态
6.基于内置类的原型拓展方法
7.原型重定向（了解即可，内置类不允许重定向）

>什么是面向对象 以及在实战项目中的应用：
>A:组件、插件、类库等封装一般都是基于创建类完成的
>B:看过部分JQ源码
>C:自己封装过一些组件和插件，例如：选项卡、轮播图、模态框、拖拽...(项目组常用插件)
>D:VUE/REACT都是基于面向对象开发的，用的时候都是创建这些类的实例
>。。。
三、THIS
>归纳汇总
1.THIS的几种情况（六种=》js严格模式=》括号表达式）
2.能够动态把控this，让其变为我们想要的（例如：基于CALL/BIND改变this、基于箭头函数用他的上下文中的this、设置—this代替this...）
3.重点关注一下this（EACH等方法中，尤其是自己封装组件的时候）
4.JQ应用中的this（EACH等方法中this是当前遍历的哪一项。。。）
5.借用内之类原型上的方法，实现通过改变this操作其他类的实例（例如：[].slice.call(arguments...)）
四、同步异步编程
1.运行机制及那些是异步的（定时器，事件绑定，AJAX，回调函数）
2.回调函数（自己封装过EACH、组件封装的时候基于回调函数创建均于生命周期函数，在每一个阶段可以做不同的事情。。。）
3.基于Pronise的基础使用
>Promise的基础
>Promise的原理
>项目中含使用Promise：async await 、发送ajax请求、一些异步操作、基于promise的一些插件
五、Ajax
六、事件兼容、事件涉及发布订阅
>最好就是多做案例
1.事件对象
2.DOM0/DOM2事件绑定（重点是机制和区别）
3.事件委托
4.发布订阅
5.PC端和移动端事件区别
6.各种案例的实现思路（例如：鼠标跟随、折叠菜单、左侧导航菜单、拖拽等）
七、ES6（非常重要）
>归纳汇总，重点是多一些面试题，基于ES6把这些东西解决（例如：两个数交换位置、求数组中最大值和最小值、数组去重。。。）
>知识点虽然小，但是期望大家汇总一下，咱们之前项目中那些用到这些内容了（例如：哪些方便用到这三个点了）
1.let/const
2.解构赋值
3.拓展（剩余，展开）运算符
4.箭头函数
5.class
6.promise
7.Set/Map
8.一些新增加的属性方法，例如：Array\String\Object
9.for of 迭代
...

八、常用语法
1.递归
2.去重
3.排序  冒泡快速插入
。。。

九、正则
>上网校正正则面试题、把咱们联系的案例都掌握了
1.常用元字符
2.常用正则表达式
3.正则捕获（replace）
4.正则应用（表单验证\字符串需求处理。。。）

十、关于DOM的操作
1.常用属性的方法（增删该查）
2.操作样式（盒模型的哪一套包括在内）
3.DOM的回流重绘（数据绑定=》文档碎片和模板字符串）

十一、性能优化（非常重要 very importent）
VUE