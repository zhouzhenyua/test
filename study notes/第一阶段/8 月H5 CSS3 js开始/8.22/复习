1、html
    是什么：超文本标记语言 用来描述网页

    基本语法： <div class="" id="" >

    掌握 ：
    行元素：a span i em strong
    块元素 ：div h1-h6 p 列表 表格 表单
    行快元素：img input(表单里面的大部分元素都是 行快元素)

  特点：
    行元素：共处一行 宽高不可控 盒模型(padding  margin 不起作用)
    块元素：独占一行 宽高可控 盒模型
    行块元素： 共处一行 宽高可控 盒模型

    h1-h6

    h1: 36px
    h2: 24px
    h3: 18px
    在一个html 文档中h1 推荐使用一次

    嵌套的元素：span a p time hgroup address markup


    p标签
    1、行高
    2、不嵌套的元素 ：p  div
        嵌套的元素： 修饰文本的元素

    span 标签
        修饰一小段文本

    i/em/strong/del/sub/sup等：放置精灵图/字体图标


    超链接a
    1、a href="" 跳转/自动刷新
    2、锚链接 id #id
        url: index.html#img1
        哈希传值 (hash) #
    3、简单的tab选项卡/轮播图


    img:
    1、路径  img/a.png  ../img/a.png
    /img 根目录下面的img 目录
    2、提示信息 alt/title



    列表：有序 无序 自定义
    1、css 有序和无序列表之间可以相互转换 ：list-style-type: ;
    2、heml 5 start='' 自定义开始的数字
    3、summary合起列表  detail展开列表 <summary> 标签包含 details 元素的标题，"details" 元素用于描述有关文档或文档片段的详细信息。


    表格：

        table caption tr th/td

        cellpadding:单元格和文字的间距  cellspacing：单元格直接的间距

        colspan rowspan

        细线表格 css属性
        border-collapse
        单元格 border-spacing

        thead 、tbody 、tfoot

    表单：
    1、加不加form的区别？
    2、get 与post 的区别？ ajax请求 axios/sync
    3、只读模式  和不可编辑模式 区别


    单行文本域：input  搜索/用户名/密码框
    多行文本域: textarea 留言板
    按钮

    默认选中：checked selected
    单选：
    多选：全选
    下拉菜单：二级联动/三级联动菜单


    html 5
        新增的：
            header nav footer main article section aside figure figcaption
            keygen process meter time markup  video audio  mark  progress address
            summary detail  datalist

        废弃的：font center s big  strike




2、css
    什么是css 层叠样式表  修饰html  组成：选择器和属性值
    1、css引入 ：
        内联样式/行内样式
        内嵌样式
        外部样式 link
        导入样式 @import

    2、css选择器
        权重值:important>行内>id>类>标签>通配符>继承>默认

        基本选择器 id>类class>标签>通配符
        组合选择器：
            后代：空格 div span{}
            子代 ：> div>span{}
            群组： , div,span{}
            直接：中间没有任何符号 div#span{}
            相邻的弟弟 :+ div+span{}
            相邻的所有弟弟 : ~ div~span{}

        伪类：
            a:link visited hover active
         css3
            奇偶:first-of-type   first-child
                 nth-of-type     nth-child
                 last-of-type    last-child

            empty(设置空元素的背景)/not /target

        伪元素
            after   content:''
            before  content:''
            first-line  首行
            first-letter    首字下沉 浮动会出现文本环绕
            selection   选中
        属性选择器：
            [属性]
            [属性=值]
            [属性^=值] 开始
            [属性$=值] 结尾



3、盒模型
    4个属性：content(width/height) margin padding border
        box-sizing:border box;
    标准盒模型 :
        盒子的宽度=width+左右margin+左右padding+左右border
    css3盒模型/低版本ie(怪癖模式)
        盒子的宽度=width(padding+border)+左右margin


    1、行元素的padding/margin-top/bottom 不可设置 但是背景可以填充 不占位
    2、margin存在负值 padding不存在负值
    3、margin塌陷
    解决方案：1、父盒子:overflow:hidden 2、父盒子： 1px 透明边框  3、父盒子：padding-top
    4、外边距重叠：
    解决方案：重叠结果：上下 同正同负 取绝对值大的
                           一正一负 求和
    5、使用场景
         父子间距 padding
         兄弟间距 margin



4、常用属性
    元素之间的转换(元素的展示方式)
    display :inline block inline-block none  展示方式
    display:flex table  布局方式

    显示隐藏：
    display: block none  (不能用transition属性)
    opacity:1  0
    visibility: visible hidden

    文本：
        实现省略号（4）：
            将height设置为line-height的整数倍，防止超出的文字露出。
            overflow: hidden;
            text-overflow:ellipsis;
            white-space: nowrap;

        字间距：letter-spacing
        一行文本居中:text-align ling-height
        多行文本居中: padding
        图文居中：vertical-align:
        color:rgb() #fff  red  hsl()
    透明：
        background:tranparent;
        background:rgba()
        opacity: ; filter:alpha(opacity=20)

    盒模型属性:
        margin/padding: 10px;  上下左右
        margin/padding: 0 auto; 上下   左右
        margin/padding: 0 auto 0; 上   左右  下
        margin/padding: 0 0 0 0; 上 右 下 左

        border: ;
        border-width: ;
        border-color: ;
        border-style: solid dashed;

        border:none;

        实现三角形
        with/height: 0;

        实现圆:border:50%;

    列表属性
        list-style:none;
        list-style-type;
        list-style-image:;
        list-style-position: outside | inside;
    背景属性：
        background:red  url()  no-repeat fixed;
        background-color: red;
        background-image: url()
        background-position:20px 20px;
        background-repeat:no-repeat;
        background-attachment:fixed;


        多背景图引入:
        background:url(),url(),url();
        调整背景图的大小:
        background-size: 100% 100%;



    css sprites (图像合成技术/雪碧图)
        主要目的：减少http请求次数



5、浮动
    属性：float:left right none
    浮动的元素：（理解为变成了 行快元素）
    脱离标准文档流： 不占位（高度显示为0）
    margin:auto 不齐作用
    绝对定位和相对定位

    由于浮动元素 高低不统一会出现 “拦路虎的现象”

    浮动塌陷：清除浮动
    清除浮动方式 ：clear:both
    1、父盒子设置定高
    2、通过伪元素：after :before清除  (大型项目)
        clear:after{
            content:"";
            display:block;
            clear:both;
        }
    5、浮动的结尾 加一个空元素 设置clear:both;

    3、父盒子浮动
    4、父盒子设置 overflow:hidden;


6、定位
    属性： position:
    子绝父相：前景图上面放文章或者放图片 遮罩层

    相对：
        margin:auto 可以居中
        相对于元素本身的位置
    绝对：
        脱离文档流
        相对与就近的有定位的上级元素定位 如若找不到就相对与body
    固定:
        脱离文档流
        相对于浏览器窗口

    居中：让一个浮动的元素居中，使用定位

    1、固定宽高的盒子
        top\left:50%; margin-left\top:- (width\height)/2

    2、固定宽高的盒子   (不兼容ie 6 7 8)
        上下左右都为0  然后设置 margin:auto
    3、盒子无具体的宽高 (不兼容ie 6 7 8)
        top|left:50%;
        transfrom:translate(-50%,-50%)

7、精灵图
8、字体图标



【css 3】

盒模型
    box-sizing:border-box;
    border-radius:;
    border-top-left-radius:
    border-top-right-radius:
    border-bottom-left-radius:
    border-bottom-right-radius:

    长方形
        border--radius:10px/20px;
    box-shadow: x  y 10px  red ,x  y 10px  red;

文本
     text-shadow: x  y 10px  red;

背景

            background-origin: 设置背景图片大小;
            background-size: 设置背景图片大小;
            background-clip: 设置背景图片位置 ;
    渐变
        线性渐变：background-image:linear-gradient 30deg form to  color;

        径向渐变 :radial-gradient:10px at 0 0 color;

边框
    border-image: ;用图片填充边框

时间过渡
    transition:属性 2s ease-in 2s;
    贝塞尔曲线
2d
    transform
    旋转 缩放 位移 斜切
3d
    perspective:;设置透视点
    transform-style: ;设置显示立体的效果
    backface--visibility:;显示/隐藏背面

动画
   定义动画
    @keyframes 动画名{0%-100%}
   使用动画
    animation:动画名 2s linear 2s 3;

animate.css的使用



布局
    css1.0/2.0
    静态布局
    液态布局
    流式布局
    圣杯布局
    双飞翼布局

    css3.0
    css3盒模型
    flex布局
    @midia screen and (){} 响应式布局
    多列布局

    移动端页面



网页的构成三部分： html结构层、css样式层、js交互层

JavaScript
    1、js 是什么？  轻量级，直译式 客户端脚本语言
    2、js 的语法？


    JavaScript组成部分：ECMAScript DOM  BOM

    ECMAScript是一套标准，定义了一种语言(如javascript)是什么样子、如何书写。

    BOM (browser object model) 浏览器对象模型

    DOM ()文档对象模型


js基本语法：
    js的引入方式：1、行内导入 2、内嵌导入  3、外部导入

    1、找人 2、绑定事件 3、书写事件驱动

语法注意 ：
    1、每一条语句之间用 ; 隔开
    2、引号的使用 内双外单  内单外双
    3、=  ==  ===
    4、js通过style 操作的行内样式
    5、var 变量名 ;function 函数名(){}
    6、输出语句 console.log() 控制台
    7、调试错误 控制台
    8、条件语句 if{} else{}
    9、window.onload(){}
    10、事件 onclick onmouseover onmouseout
    11、变量命名规范
            驼峰式命名法
            匈牙利命名法：按照功能命名
    12、获取dom 元素 通过id/class/tag/选择器/ 获取




变量

    ！注意：
        1、var a=b=1; 等同于 var a=1 ;b=1;
           var a,b=1; 等同于 var a=1 ;var b=1;

        2、变量声明的时候重名
            es5 中下面的代码覆盖上面的
            es6 直接报错
        3、映射（变量和window之间的映射）: es5中 window中的变量和window存在一一对应关系
            es5 中存在映射 es6之后 不存在映射
        4、变量提升
            变量的作用域

    1、关键字：let var
    2、变量命名的时候
        1、必须以字母、下划线、或$开头
        可以包含数字
        2、大小写有严格的区别，对大小写敏感 ，
        3、不能以js保留字和关键字 命名
          break、else、new、var、 case、
          finally 、 return、 void 、 catch  、for  、
          switch 、 while 、 continue、  function  、this 、
           with 、default 、 if 、 throw 、 delete 、 in 、  try 、do 、
            instranceof、  typeof
              变量命名必须以字母或是下标符号”_”或者”$”为开头。
              2.变量名长度不能超过255个字符。
              3.变量名中不允许使用空格，首个字不能为数字。
              4.不用使用脚本语言中保留的关键字及保留符号作为变量名。
              5.变量名区分大小写。(javascript是区分大小写的语言)
              6.汉语可以作为变量名。但是不建议使用！！！（low）
     命名规则
         驼峰式命名法：遇到每一个有意义的单词首字母大写
         小驼峰: get Element By Id
         大驼峰  Get Element By Id :构造函数定义/类

         匈牙利命名法： 按照功能划分（数据类型）
         string   s
         arr      a
         object   o
         function  fn
         number  num


输出语句 :alert console.log   document.write

    1、弹窗输出
      调试  alert () 返回值 undefined
        confirm() 有确定和取消按钮   返回值 确定:true  取消:false
        prompt() 有确定和取消按钮以及输入框  返回值 确定:输入的内容 取消：null

    2、控制台打印输出
     调试   console.log(a);
        console.dir(a); //错误
        console.warn(a);
        console.error(a);
        console.assert(a);
     调试
        alert ()
        console.log()
        断点调试

    3、在网页中打印输出
        document.write();
        document.writeln(); 可以自动换行

js 的数据类型：7种

    基本数据类型：
        number
        string
        boolean
        null
        undefined

    引用数据类型：
        function
        object
            Array类
            普通对象类
            Date类
    1、这种数据类型包含的情况？
    2、强制转换：
        【数字number】
        1、有效数字 ：整数  浮点数
        2、无效数字 ：NaN
            NaN（非数） 全称 not a number
            NaN 不等于任何数据类型中的值
            NaN 不等于任何数字 和任何数字做运算结果都是NaN，
            和任何数字比较结果都是false
            NaN 不等于 NaN
        isNaN() 判断一个内容是否为非数
            是数字 为false
            不是数字 为true
        强制转换
        typeof 检测一个变量存储的数据类型

        2、转换
            数据类型转换为number类型
            显示转换（强制转换）

                Number()
                parseInt    强制转换为整型
                parseFloat  强制转换为浮点型

                利用parseInt和parseFloat转换时，从左至右 只要遇到非数直接截至转换
            隐式转换 ：- * / % isNaN ==
        3、其他数据类型 转换number 类型时候对应的值
            string :利用Number转换的时候 只要遇到非数 结果为NaN
                    Number('') =>0
                    Number('1') =>1
                    Number('1.1') =>1.1
                    Number('a1.2') =>NaN
                    Number('1.1a') =>NaN


            boolean=>number
                    true => 1
                    false => 0

            null/undefined =>number
                null => 0
                undefined => NaN
            引用数据类型
            object =>    NaN
            function =>     NaN

            [] => 0
            [1] => 1
            ['1'] => 1
            ['1a'] => NaN

             console.log(typeof typeof typeof undefined); //string


    【string】
      1、用一对单引号 或者 双引号包含的内容 既为字符串
        字符串特点：
            1、原样输出
            2、单双引号的使用
                外双内单 外单内双
                转义字符  \   \n:换行   \t:Tab键空格 占位四个空格

         2、强制转换字符串
              String(变量名)
              变量名.toSting()
            隐式转换：
                + 号左右两边只要有一边为字符串，结果为字符串的拼接
         3、其他数据类型 转换为字符串 只需要加一对引号

    【boolean】
        1、布尔类型
            真true 假false

        2、强制转换 boolean
              强制转换: Boolean()
              隐式转换: ! !!  if()

        3、其他类型转换为 boolean
            js中除了 0/NaN/''/null/undefined 转换为false
            其余的转换为false

    【null和undefined】
        1、区别：
        2、特点：
            null和undefined不等于任何其他数据类型
            null == undefined
        3、null 和 undefined 转换为其他数据类型对应的值



        千万不要把两个概念弄混淆了，“一个变量存在，
        但是没有数值”和“一个变量并不存在” — 他们完全是两回事 — 在前面你看到的盒子的类比中，
        不存在意味着没有可以存放变量的“盒子”。
        没有定义的值意味着有一个“盒子”，但是它里面没有任何值。

















运算符 ：算数（一/二/三元运算符） 比较（=  ==  ===） 逻辑（& ||  ！ ）  赋值（+= -= *= /= ） 逗号（ , ）

















