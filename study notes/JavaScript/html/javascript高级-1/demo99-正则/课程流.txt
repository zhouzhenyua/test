1.复习字符串操作
    search			查找
    substring		获取子字符串
    charAt			获取某个字符
    split			分割字符串，获得数组

2.案例：找出字符串里的所有数字。
    通过js的繁杂体现出正则的好处，引入正则
    js代码：
        var str='12 fff 87 er334 233 -=-=fa80';
        var arr=[];
        var tmp='';
        for(var i=0;i<str.length;i++)
        {
            if(str.charAt(i)>='0' && str.charAt(i)<='9')
            {
                tmp+=str.charAt(i);
            }else{
                if(tmp)
                {
                    arr.push(tmp);
                    tmp='';
                }
            }
        }
        if(tmp)
        {
            arr.push(tmp);
            tmp='';
        }
        alert(arr);

    正则代码：
        var str='12 fff 87 er334 233 -=-=fa80';
        alert(str.match(/\d+/g));

3.什么是正则（PPT）
    1）规则、模式
    2）强大的字符串匹配工具
    3）是一种正常人类很难读懂的文字
    4）RegExp对象
            JS风格——new RegExp(“a”, “i”)
                例子：  var re=new RegExp('b', 'i');
                        var str='abcdef';
                        alert(str.search(re));
            perl风格——/a/i
                例子：  var re=/a/i;
                        var str='abcdef';
                        alert(str.search(re));

    ps:没有什么东西是非正则不可的，只是使用它会让问题简单而已

4.search
    字符串搜索
        返回出现的位置
        忽略大小写：i——ignore
5.match
    获取匹配的项目
        量词：+
        量词变化：\d、\d\d和\d+    （转义）
        全局匹配：g——global
        例子：找出所有数字
            var str='asdf 34 656 cvs33';
            var re=/\d+/g;
            alert(str.match(re));
6.replace
    替换所有匹配
        返回替换后的字符串
        例子：敏感词过滤
        html：
        <textarea id="txt1" rows="10" cols="40"></textarea><br>
        <input id="btn1" type="button" value="过滤" /><br>
        <textarea id="txt2" rows="10" cols="40"></textarea>
        js:
        var oTxt1=document.getElementById('txt1');
        var oTxt2=document.getElementById('txt2');
        var oBtn=document.getElementById('btn1');

        oBtn.onclick=function ()
        {
            var re=/北京|百度|淘宝/g;

            oTxt2.value=oTxt1.value.replace(re, '***');
        };
7.元字符——中括号
    任意字符
        [abc]
            例子：o[usb]t——obt、ost、out
    范围
        [a-z]、[0-9]
            例子：id[0-9]——id0、id5         ps:\d = [0-9]
    排除
        [^a]
            例子：o[^0-9]t——oat、o?t、o t
    用法：
        1）组合
            [a-z0-9A-Z]
        2）实例：偷小说
            过滤HTML标签
                自定义innerText方法
                代码：
                    html:
                    <textarea id="txt1" rows="10" cols="40"></textarea><br>
                    <input id="btn1" type="button" value="转换" /><br>
                    <textarea id="txt2" rows="10" cols="40"></textarea>
                    js:
                    var oTxt1=document.getElementById('txt1');
                    var oTxt2=document.getElementById('txt2');
                    var oBtn=document.getElementById('btn1');
                    oBtn.onclick=function ()
                    {
                        var re=/<[^<>]+>/g;    // .+ 任意个任意字符

                        oTxt2.value=oTxt1.value.replace(re, '');
                    };

        3）转义字符
            .（点）——任意字符   (ps: .本身 \.)
            \d、 数字[0-9]        \w、 英文，数字，下划线[a-z0-9_]         \s   空白字符
            \D、 非               \W、 非                                  \S    非


8.什么是量词
    个数：出现的次数
        {n,m}，至少出现n次，最多m次
        例子：查找QQ号
                代码：[1-9]\d{4,10}
    常用量词
        {n,}	    至少n次
        *		    任意次	{0,}       (出现零次也算 建议别用)
        ？	        零次或一次	{0,1}   (例：（0\d{2,3}-）?[0-9]\d{7})
        +	        一次或任意次{1,}
        {n}	        正好n次

9:校验邮箱：
    例子：
        html:
            <input type="text" id="txt1" />
            <input type="button" value="校验" id="btn1" />
        js:
            var oTxt=document.getElementById('txt1');
            var oBtn=document.getElementById('btn1');

            oBtn.onclick=function ()
            {

                //QQ邮箱：591808250 @ qq.com
                //163邮箱：18630377912 @ 163.com
                //其他邮箱：ning @ qq.com


                //一串英文，数字，下划线        @        一串英文，数字     .       一串英文

                var re=/\w+@[a-z0-9]+\.[a-z]+/i;


                if(re.test(oTxt.value))    //test（）检验这个方法是否符合正则的方法
                {
                    alert('合法的邮箱');
                }
                else
                {
                    alert('你丫写错了');
                }
            };
    行首行尾（^ 和 $）
        改写：
            var re=/^\w+@[a-z0-9]+\.[a-z]+$/i;

ps:让学员写手机验证！！

10.谢谢!!!!

